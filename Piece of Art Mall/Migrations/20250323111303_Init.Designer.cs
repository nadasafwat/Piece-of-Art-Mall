// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Piece_of_Art_Mall.AppDbContextFolder;

#nullable disable

namespace Piece_of_Art_Mall.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250323111303_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Piece_of_Art_Mall.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Piece_of_Art_Mall.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Piece_of_Art_Mall.Models.LoyalityCard", b =>
                {
                    b.Property<int>("LoyalityCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoyalityCardId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("LoyalityCardBalance")
                        .HasColumnType("int");

                    b.HasKey("LoyalityCardId");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("LoyalityCard");
                });

            modelBuilder.Entity("Piece_of_Art_Mall.Models.PieceOfArt", b =>
                {
                    b.Property<int>("PieceOfArtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PieceOfArtId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PieceOfArtDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PieceOfArtPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PieceOfArtTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PieceOfArtId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("PieceOfArt");
                });

            modelBuilder.Entity("Piece_of_Art_Mall.Models.LoyalityCard", b =>
                {
                    b.HasOne("Piece_of_Art_Mall.Models.Customer", "Customer")
                        .WithOne("LoyalityCard")
                        .HasForeignKey("Piece_of_Art_Mall.Models.LoyalityCard", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Piece_of_Art_Mall.Models.PieceOfArt", b =>
                {
                    b.HasOne("Piece_of_Art_Mall.Models.Category", "category")
                        .WithMany("PieceOfArts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Piece_of_Art_Mall.Models.Customer", "Customer")
                        .WithMany("PieceOfArts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("category");
                });

            modelBuilder.Entity("Piece_of_Art_Mall.Models.Category", b =>
                {
                    b.Navigation("PieceOfArts");
                });

            modelBuilder.Entity("Piece_of_Art_Mall.Models.Customer", b =>
                {
                    b.Navigation("LoyalityCard")
                        .IsRequired();

                    b.Navigation("PieceOfArts");
                });
#pragma warning restore 612, 618
        }
    }
}
